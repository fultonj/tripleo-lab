---
- name: ensure sshd does not rely on gssapi
  replace:
    path: /etc/ssh/sshd_config
    regexp: '^GSSAPIAuthentication yes$'
    replace: 'GSSAPIAuthentication no'
  register: sshd-config

- name: restart sshd upon config change
  service:
    name: sshd
    state: restarted
- name: Set selinux to permissive
  selinux:
    state: permissive
    policy: targeted
  when:
    - disable_selinux|bool

- name: Persist permissive
  when:
    - disable_selinux|bool
  copy:
    dest: /etc/selinux/config
    content: |
      SELINUX=permissive
      SELINUXTYPE=targeted

- name: set hostname properly
  lineinfile:
    dest: /etc/hosts
    line: "127.0.0.1 undercloud.{{ansible_domain}} undercloud localhost localhost.localdomain"
    regexp: '^127\.0\.0\.1'

- name: proxy configurations if required
  when:
    - proxy_host is defined
  block:
    - name: check dnf presence
      stat:
        path: /etc/dnf/dnf.conf
      register: dnf_state

    - name: set proxy for yum
      ini_file:
        backup: yes
        path: /etc/yum.conf
        option: proxy
        section: main
        value: "http://{{proxy_host}}"

    - name: inject proxy for dnf
      when:
        - dnf_state.stat.exists
      ini_file:
        backup: yes
        path: /etc/dnf/dnf.conf
        option: proxy
        section: main
        value: "http://{{proxy_host}}"

    - name: inject proxy in env
      blockinfile:
        path: /etc/environment
        block: |
          http_proxy=http://{{ proxy_host }}
          https_proxy=http://{{ proxy_host }}
          no_proxy={{ no_proxy }}
          HTTP_PROXY=http://{{ proxy_host }}
          HTTPS_PROXY=http://{{ proxy_host }}
          NO_PROXY={{ no_proxy }}

    - name: create base dir
      file:
        group: root
        mode: 0755
        owner: root
        path: /etc/systemd/system/docker.service.d
        state: directory
    - name: create service file
      copy:
        content: |
          [Service]
          Environment="HTTP_PROXY=http://{{proxy_host}}/"
          Environment="HTTPS_PROXY=http://{{proxy_host}}/"
          Environment="NO_PROXY={{no_proxy}}"
        dest: /etc/systemd/system/docker.service.d/http-proxy.conf
        group: root
        mode: 0644
        owner: root

- name: set delorean repository if we have a mirror
  template:
    dest: "/etc/yum.repos.d/delorean-{{tripleo_version}}.repo"
    src: delorean.repo.j2
  when:
    - centos_mirror|bool
    - base_image != 'rhel'

- name: set CentOS mirror if we have a mirror
  when:
    - centos_mirror|bool
    - base_image != 'rhel'
  template:
    dest: "/etc/yum.repos.d/CentOS-Base.repo"
    src: centos.repo.j2

- name: set delorean repository from upstream if no mirror
  when:
    - not centos_mirror|bool
    - base_image != 'rhel'
  block:
    - name: fetch latest repo version
      shell: |
        curl -s https://trunk.rdoproject.org/centos7/current/ | awk '/python2-tripleo-repos/ { print $6}' | cut -d '"' -f 2
      register: tripleo_repo_version
    - name: install tripleo repository
      package:
        name: "https://trunk.rdoproject.org/centos7/current/{{tripleo_repo_version.stdout}}"
        state: present
    - name: enable tripleo_version repository with ceph
      command: tripleo-repos -b "{{tripleo_version}}" current-tripleo ceph
      args:
        creates: "/etc/yum.repos.d/delorean-{{tripleo_version}}.repo"

- name: do we have a swap file
  stat:
    path: /dev/sdb
  register: swap_on

- name: set fstab entry for swap if needed
  mount:
    backup: yes
    path: swap
    src: /dev/sdb
    state: present
    opts: defaults
    fstype: swap
  when:
    - swap_on.stat.exists
    - swap_on.stat.isblk

- name: set up custom repositories
  yum_repository:
    name: "{{ item.name }}"
    description: "{{ item.name }}"
    baseurl: "{{ item.uri }}"
    gpgcheck: "{{ item.gpg |default(omit) }}"
    priority: "{{ item.priority |default(omit) }}"
  loop: "{{ custom_repositories }}"
